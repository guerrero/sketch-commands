/**
 * @fileoverview Commands to transform position of elements.
 * @author Ale Muñoz
 * @copyright 2015 Ale Muñoz. All rights reserved.
 */

/**
 * Modifies position of selected elements with given value
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onSetPositionWithArguments = function(context) {
  var doc = context.document
  var selection = context.selection

  var firstItem = selection[0]
  var x_pos = firstItem.absoluteRect().rulerX()
  var y_pos = firstItem.absoluteRect().rulerY()
  var position = [doc askForUserInput:"Position (x,y pair)" initialValue:(x_pos + "," + y_pos)]
  var x = eval(position.split(",")[0])
  var y = eval(position.split(",")[1])

  for (var i=0; i<selection.count(); i++) {
    var layer = selection.objectAtIndex(i)

    layer.absoluteRect().setRulerX(x)
    layer.absoluteRect().setRulerX(y)
  }
}

/**
 * Fix element position
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onFixPosition = function(context) {
  var doc = context.document
  var selection = context.selection

  for (var i = 0; i < selection.count(); i++) {
    var objectFrame = selection.objectAtIndex(i).frame()
    objectFrame.setY(Math.round(objectFrame.y()))
    objectFrame.setX(Math.round(objectFrame.x()))
    objectFrame.setWidth(Math.round(objectFrame.width()))
    objectFrame.setHeight(Math.round(objectFrame.height()))
  }
}

/**
 * Swap two elements' positions (only objects in the same artboard weird)
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onSwapPositions = function(context) {
  var doc = context.document
  var selection = context.selection

  if (selection.count() === 2){

    var firstObject = selection[0]
    var secondObject = selection[1]
    var firstPosition  = {
      left: firstObject.frame().left(),
      top: firstObject.frame().top()
    }
    var secondPosition = {
      left: secondObject.frame().left(),
      top: secondObject.frame().top()
    }

    firstObject.frame().setX(secondPosition.left)
    firstObject.frame().setY(secondPosition.top)

    secondObject.frame().setX(firstPosition.left)
    secondObject.frame().setY(firstPosition.top)

  } else {
    doc.showMessage("You need to select exactly two objects")
  }
}

/**
 * Center two objects (target into reference)
 * @function
 * @param {Object} targetObject - The element to move.
 * @param {Object} context - The reference element.
 */
function _centerTwoObjects(targetObject, referenceObject) {
  var referencePosition = {
    left: referenceObject.frame().left(),
    top: referenceObject.frame().top()
  }
  var referenceSize = {
    width: referenceObject.frame().width(),
    height: referenceObject.frame().height()
  }
  var targetSize = {
    width: targetObject.frame().width(),
    height: targetObject.frame().height()
  }

  targetObject.frame().setX(referencePosition.left - (targetSize.width - referenceSize.width) / 2)
  targetObject.frame().setY(referencePosition.top - (targetSize.height - referenceSize.height) / 2)
}

/**
 * Center foremost selected object into rearmost (only objects in the same artboard weird)
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onCenterToRearmost = function(context) {
  var doc = context.document
  var selection = context.selection
  var rearmostObject = selection[0]
  var foremostObject = selection[1]

  if ( selection.count() == 2){
    _centerTwoObjects(rearmostObject, foremostObject)
  } else {
    doc.showMessage("You need to select exactly two objects")
  }
}

/**
 * Center rearmost selected object into foremost (only objects in the same artboard weird)
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onCenterToRearmost = function(context) {
  var doc = context.document
  var selection = context.selection
  var rearmostObject = selection[0]
  var foremostObject = selection[1]

  if ( selection.count() == 2){
    _centerTwoObjects(foremostObject, rearmostObject)
  } else {
    doc.showMessage("You need to select exactly two objects")
  }
}

/**
 * Move selected elements given pixels in given direction
 * @function
 * @param {Object} context - The current Sketch app context.
 */
function _move(element, direction, amount) {
  switch(direction) {
    case 'up':
      var y = element.frame().y()
      element.frame().setY(y - amount)
      break
    case 'down':
      var y = element.frame().y()
      element.frame().setY(y + amount)
      break
    case 'left':
      var x = element.frame().x()
      element.frame().setX(x - amount)
      break
    case 'right':
      var x = element.frame().x()
      element.frame().setX(x + amount)
      break
    break
    default:
      doc.showMessage("Error in _move function")
    break
  }
}

/**
 * Move up selected elements 100px
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onMoveUp100px = function(context) {
  var doc = context.document
  var selection = context.selection

  for (var i=0; i < selection.count(); i++) {
    var layer = selection.objectAtIndex(i)
    _move(layer, 'up', 100)
  }
}

/**
 * Move down selected elements 100px
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onMoveDown100px = function(context) {
  var doc = context.document
  var selection = context.selection

  for (var i=0; i < selection.count(); i++) {
    var layer = selection.objectAtIndex(i)
    _move(layer, 'down', 100)
  }
}

/**
 * Move left selected elements 100px
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onMoveLeft100px = function(context) {
  var doc = context.document
  var selection = context.selection

  for (var i=0; i < selection.count(); i++) {
    var layer = selection.objectAtIndex(i)
    _move(layer, 'left', 100)
  }
}

/**
 * Move right selected elements 100px
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onMoveRight100px = function(context) {
  var doc = context.document
  var selection = context.selection

  for (var i=0; i < selection.count(); i++) {
    var layer = selection.objectAtIndex(i)
    _move(layer, 'right', 100)
  }
}
