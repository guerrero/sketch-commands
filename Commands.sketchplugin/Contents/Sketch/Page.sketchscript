/**
 * @fileoverview Commands to iterate with pages.
 * @author Ale Muñoz
 * @copyright 2015 Ale Muñoz. All rights reserved.
 */

@import 'library/common.js'

/**
 * Duplicates current page.
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onDuplicateCurrentPage = function(context) {

  var doc = doc || context.document

  var page = [doc currentPage],
      newPage = [page copy]

  newPage.setName([page name] + " Copy")

  [[doc documentData] addPage:newPage]
  [doc setCurrentPage:newPage]
}

 /**
 * Asks user for a name to use as the current page name.
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onSetPageNameWithArguments = function(context) {

  var doc = doc || context.document

  // Set Page Name
  var c = [doc currentPage],
      name = [doc askForUserInput:"Page Name" initialValue:[c name]]

  [c setName:name]

  // This is here to force a redraw of the page list widget.
  // Otherwise, our new page name won't be shown on the UI until we change
  // the current page name
  [doc setCurrentPage:0]
  [doc setCurrentPage:([[doc pages] count] - 1)]
  [doc setCurrentPage:c]
}

/**
 * Create new page in the current document.
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onNewPage = function(context) {
  [doc addBlankPage];
}

/**
 * Removes current page only if it isn't the last in the current document
 * @function
 * @param {Object} context - The current Sketch app context.
 */
var onRemoveCurrentPage = function(context) {

  var doc = doc || context.document

  if([[doc pages] count] == 1) {
    alert("You can’t remove the last page on your document.")
  } else {
    [doc removePage:[doc currentPage]]
  }
}
